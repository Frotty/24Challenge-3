package BasicAI
import initlater Soldier
import UnitControl
import initlater Flag
import MapConstants
import LinkedList

constant AI_UPDATE_PERIOD = 0.1

LinkedList<Soldier> soldiers = new LinkedList<Soldier>()

public Soldier AI_currentSoldier =  null

constant aiTimer = CreateTimer()


public function Soldier.registerAI(AIType aitype)
	switch aitype
		case AIType.NONE
			//nothing
		case AIType.BASIC
			this.registerBasicAI()

public enum AIType
	NONE
	BASIC
	

function Soldier.registerBasicAI()
	this.aitype = AIType.BASIC
	soldiers.add(this)
	Team flagTeam = Flag.getTeam()
	// Check Flag Carrier
	if this.getTeam() == flagTeam
		// Allied Team holds flag
		this.actor.issueAiPointOrder("attack", Flag.INSTANCE.pos.toVec2())
	else
		if flagTeam == Team.DUMMY
			// Flag on Ground
			this.actor.issueAiTargetOrder("smart", Flag.INSTANCE.visual)
		else
			// Enemy Team holds flag
			this.actor.issueAiPointOrder("attack", Flag.INSTANCE.pos.toVec2())


public function initBasicAI()
	aiTimer.start(aiUpdatePeriod(), function aiUpdate)
		
	CreateTrigger()
		..registerAnyUnitEvent(EVENT_PLAYER_UNIT_PICKUP_ITEM)
		..addAction(() -> begin
		let carrier = GetTriggerUnit().getEntity() 
		let flag = GetManipulatedItem()
		Soldier soldier
		if carrier instanceof Soldier
			soldier = carrier castTo Soldier
			// If a unit receives the flag it automatically walks home
			if flag != null
				flagSound.play()
				Flag.INSTANCE.carrier = soldier
				soldier.actor.setPathing(false)
				if soldier.actor.getTeam() == Team.RED
					soldier.actor.issueAiPointOrder("move", TEAM_RED_RITUAL)
				else
					soldier.actor.issueAiPointOrder("move", TEAM_GREEN_RITUAL)
				printTimed(soldier.getTeam().toString() + " picked up the flag!", 5)
	end)
	
function aiUpdatePeriod() returns real
	// the update period gets smaller when there are more soldiers
	// +1 to avoid division by zero
	return 0.001 + 4. / (1 + soldiers.getSize())

function aiUpdate()
	aiTimer.start(aiUpdatePeriod(), function aiUpdate)
	if AI_currentSoldier == null
		AI_currentSoldier = Soldier.first
	if AI_currentSoldier != null
		controlSoldier(AI_currentSoldier)
		AI_currentSoldier = AI_currentSoldier.next
		
function controlSoldier(Soldier s)
	Team flagTeam = Flag.getTeam()
	AddSpecialEffectTarget("Abilities\\Spells\\Other\\TalkToMe\\TalkToMe.mdl", s.actor, "overhead").destr()
	if s != Flag.INSTANCE.carrier
		// Check Flag Carrier
		if s.actor.getTeam() == flagTeam
			// Allied Team holds flag
			if s.pos.distToVec(Flag.INSTANCE.pos) > 800
				// when the unit is to far away from the flag, walk back to flag
				s.actor.issueAiPointOrder("attack", Flag.INSTANCE.pos.toVec2())
		else
			if flagTeam == Team.DUMMY
				// Flag on Ground
				s.actor.issueAiTargetOrder("smart", Flag.INSTANCE.visual)
			else
				// Enemy Team holds flag
				s.actor.issueAiPointOrder("attack", Flag.INSTANCE.pos.toVec2())
	else
		if s.actor.getTeam() == Team.RED
			s.actor.issueAiPointOrder("move", TEAM_RED_RITUAL)
		else
			s.actor.issueAiPointOrder("move", TEAM_GREEN_RITUAL)
