package Flag
import Soldier
import MapConstants
import SoundHelper
import initlater Round

constant FLAG_ID = 'Iflg'
// the flag position is exactly in the center between red and green ritual:
constant STD_FLAG_POS = (0.5*(TEAM_GREEN_RITUAL + TEAM_RED_RITUAL)).withZ(0)

// Sheep that is needed for the ritual
public class Flag extends Entity
	static thistype INSTANCE
	item visual
	Soldier carrier
	
	construct()
		super(STD_FLAG_POS, DUMMY_PLAYER)
		visual = CreateItem(FLAG_ID, pos.x, pos.y)
		visual.setEntity(this)
		INSTANCE = this
		
	construct(vec2 pos)
		super(pos.withZ(0.), DUMMY_PLAYER)
		visual = CreateItem(FLAG_ID, pos.x, pos.y)
		visual.setEntity(this)
		INSTANCE = this
		
		
	// Check if Sheep inside ritualbase
	override function update()
		if carrier != null
			pos = carrier.actor.getPos3fake()
			if carrier.getTeam() == Team.RED
				if carrier.pos.toVec2().distToVecSquared(TEAM_RED_RITUAL) < 128*128
					endRound(Team.RED)
			else
				if carrier.pos.toVec2().distToVecSquared(TEAM_GREEN_RITUAL) < 128*128
					endRound(Team.GREEN)
			
	static function getTeam() returns Team
		if INSTANCE.carrier != null
			return INSTANCE.carrier.getTeam()
		else
			return Team.DUMMY
			
	ondestroy
		visual.remove()
		INSTANCE = null
			
			
public Sound flagSound = new Sound("Sound\\Interface\\QuestLog.wav", 0, false)
		
public function initFlag()
	CreateTrigger()
		..registerAnyUnitEvent(EVENT_PLAYER_UNIT_DEATH)
		..addAction(() -> begin
		let u = GetDyingUnit().getEntity()
		let killer = GetKillingUnit().getEntity()
		if u == Flag.INSTANCE.carrier and killer instanceof Soldier
			
			let soldier = killer castTo Soldier
			// Transfer Flag to Killer
			Flag.INSTANCE.carrier = soldier
			Flag.INSTANCE.visual.remove()
			soldier.actor.addItem(FLAG_ID)
			Flag.INSTANCE.visual = UnitItemInSlot(soldier.actor, 0)
	end)
	
