package UnitProduction
import Soldier
import PlayerData
import SpawnData
import Income

init
	CreateTrigger()
		..registerAnyUnitEvent(EVENT_PLAYER_UNIT_CONSTRUCT_FINISH)
		..addAction(() -> handleConstruction(GetConstructedStructure()))
	CreateTrigger()
		..registerAnyUnitEvent(EVENT_PLAYER_UNIT_UPGRADE_FINISH)
		..addAction(() -> handleConstruction(GetTriggerUnit()))
	
	CreateTrigger()
		..registerAnyUnitEvent(EVENT_PLAYER_UNIT_TRAIN_FINISH)
		..addAction(() -> begin
		let trained = GetTrainedUnit()
		let b = GetTriggerUnit()
		// issue building to construct a new unit of this type		
		IssueImmediateOrderById(b, trained.getTypeId())
		aiStartControl(trained)
	end)
	
function handleConstruction(unit building)
	let b = building
	let sd = getSpawnData(b.getTypeId())

	// income
	let pd = b.getOwner().getPData()
	adjustIncome(pd, sd.goldCost)
	

	// order the constructed building to build two units of the produced unit
	for i = 1 to 2
		IssueImmediateOrderById(b, orcUnitId(sd.id))
		IssueImmediateOrderById(b, undeadUnitId(sd.id))
	
/** control what this unit should do after it has been trained */
function aiStartControl(unit u)
	new Soldier(u)
	
