package SpawnData
import LinkedList
import HashMap

// general class for storing the data of a spawned unit
// from this, the OE data is generated, but it can also be used ingame

/** a list of all the spawnData */
public LinkedList<SpawnData> spawnData
HashMap<int, SpawnData> unitIdToSpawnData

init
	spawnData = spawnData()
	unitIdToSpawnData = new HashMap<int, SpawnData>
	for s in spawnData
		unitIdToSpawnData.put(s.id, s)
		
public function getSpawnData(int unitId) returns SpawnData
	return unitIdToSpawnData.get(unitId)
	
public function unit.getSpawnData() returns SpawnData
	return unitIdToSpawnData.get(this.getTypeId())

public function unit.getSpawnDataForBuilding() returns SpawnData
	return unitIdToSpawnData.get(this.getTypeId() - 256*256*256)


public enum SpawnClass
	Attacker
	Defender
	
public enum ArmorType
	Normal
	Small
	Medium
	Large
	Fortified
	Hero
	Divine
	Unarmored
	
public enum AttackType
	Unknown
	Normal
	Pierce
	Siege
	Spells
	Chaos
	Magic
	Hero


public function ArmorType.toObjectString() returns string
	string result = "normal"
	switch this
		case Normal
			result = "normal"
		case Small
			result = "small"
		case Medium
			result = "medium"
		case Large
			result = "large"
		case Fortified
			result = "fort"
		case Hero
			result = "hero"
		case Divine
			result = "divine"
		case Unarmored
			result = "none"
	return result
	
public function AttackType.toObjectString() returns string
	string result = "unknown"
	switch this
		case Unknown
			result = "unknown"
		case Normal
			result = "normal"
		case Pierce
			result = "pierce"
		case Siege
			result = "siege"
		case Spells
			result = "spells"
		case Chaos
			result = "chaos"
		case Magic
			result = "magic"
		case Hero
			result = "hero"
	return result

public class SpawnData
	int id
	int baseUnit
	string name
	string description = ""
	string icon = "ReplaceableTextures\\CommandButtons\\BTNBerserkForTrolls.blp"
	string hotkey = "X"
	int maxHP = 100
	int maxMana = 0
	real attackCooldown = 1.3
	int damageMin = 10
	int damageMax = 12
	AttackType attackType = Pierce
	ArmorType armorType = Normal
	int armor = 3
	SpawnClass spawnClass = Attacker
	string productionBuildingName
	string productionBuildingModel = "buildings\\human\\Farm\\Farm.mdl"
	real productionBuildingScale = 1.0
	int goldCost = 50
	int unitBuildTime = 10
	
	construct(int id, int baseUnit, string name)
		this.id = id
		this.baseUnit = baseUnit
		this.name = name
		// generic name for production building:
		this.productionBuildingName = name + " Barracks"
		
	/** generate a nice description of this unit and its stats .... */
	function getExtendedDescription() returns string
		return "|cffeeeeee" + description + "|r\n\n"
			+ "Damage: " + I2S(damageMin) + " - " + I2S(damageMax) + "\n"
			+ "HP: " + I2S(maxHP) + "\n"
	
public function spawnData() returns LinkedList<SpawnData>
	let l = new LinkedList<SpawnData>
	l.add(ghoul())
	return l

	
function ghoul() returns SpawnData
	let r = new SpawnData('xgho', 'ugho', "Ghoul")
	r.productionBuildingModel = "buildings\\undead\\Crypt\\Crypt.mdl"
	r.description = "Ghouls are cheap and weak mealee units."
	return r